@page "/competidors/delete"

@using Microsoft.EntityFrameworkCore
@using CompetiZapp.Data
@using CompetiZapp.Components.Account
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject IDbContextFactory<CompetiZapp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "admin")]


<PageTitle>Deletar</PageTitle>
<div class="text-right">
    <a class="button" href="/competidors">Voltar para a lista</a>
</div>
<h3>Tem certeza que deseja deletar o competidor?</h3>
<div>
    <hr />
    @if (competidor is null)
    {
        <p><em>Carregando...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@competidor.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@competidor.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Idade</dt>
            <dd class="col-sm-10">@competidor.Idade</dd>
        </dl>
        <EditForm method="post" Model="competidor" OnValidSubmit="DeleteCompetidor" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(competidor is null)">Deletar</button>
        </EditForm>
        <br />
    }
</div>

@code {
    Competidor? competidor;

    [SupplyParameterFromQuery]
    public Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        competidor = await context.Competidor.FirstOrDefaultAsync(m => m.Id == Id);

        if (competidor is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteCompetidor()
    {
        using var context = DbFactory.CreateDbContext();
        context.Competidor.Remove(competidor!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/competidors");
    }
}
